{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/env.mjs"],"sourcesContent":["import { createEnv } from \"@t3-oss/env-nextjs\";\nimport { z } from \"zod\";\n\nexport const env = createEnv({\n  server: {\n    VERCEL_URL: z.string().optional(),\n    VERCEL_ENV: z.string().optional(),\n    VERCEL_OIDC_TOKEN: z.string().optional(),\n    COOKIE_DOMAIN: z.string().optional(),\n    NODE_ENV: z.string().default(\"development\"),\n    MEASUREMENT_ID: z.string().optional().default(\"G-XXXXXXXXXX\"),\n    PROD_API_BASE_URL: z.string().optional(),\n    WEBSOCKET_URL: z.string().optional(),\n    NEON_DATABASE_URL: z.string().optional(),\n\n    LOCAL_DEV_BACKEND_HOST: z.string().optional().default(\"localhost\"),\n    LOCAL_DEV_BACKEND_PORT: z.number().optional().default(10000),\n    NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: z.string(),\n    CLERK_SECRET_KEY: z.string(),\n    NEXT_PUBLIC_CLERK_SIGN_IN_URL: z.string().optional().default(\"/sign-in\"),\n    NEXT_PUBLIC_CLERK_SIGN_UP_URL: z.string().optional().default(\"/sign-up\"),\n    EDGE_CONFIG: z.string().url().optional().default(\"https://edge.clerk.dev\"),\n    UPLOADTHING_TOKEN: z.string().optional(),\n    AUTH_SECRET: z.string({\n      required_error:\n        \"AUTH_SECRET  is required. This is a secret key used to sign and verify JWT tokens. It should be a long, seemingly random string.\",\n    }),\n    DISCORD_APP_TOKEN: z\n      .string({\n        required_error:\n          \"DISCORD_APP_TOKEN is required. Visit https://discord.com/developers/applications -> Your bot -> Bot -> Token\",\n      })\n      .min(\n        1,\n        \"DISCORD_APP_TOKEN is required. Visit https://discord.com/developers/applications -> Your bot -> Bot -> Token\",\n      )\n      .optional(),\n    DISCORD_APP_ID: z\n      .string({\n        required_error:\n          \"DISCORD_APP_ID is required. Visit https://discord.com/developers/applications -> Your bot -> General information -> Application ID\",\n      })\n      .min(\n        1,\n        \"DISCORD_APP_ID is required. Visit https://discord.com/developers/applications -> Your bot -> General information -> Application ID\",\n      )\n      .optional(),\n    DISCORD_APP_PUBLIC_KEY: z\n      .string({\n        required_error:\n          \"DISCORD_APP_PUBLIC_KEY is required. Visit https://discord.com/developers/applications -> General information -> PUBLIC KEY\",\n      })\n      .min(\n        1,\n        \"DISCORD_APP_PUBLIC_KEY is required. Visit https://discord.com/developers/applications -> General information -> PUBLIC KEY\",\n      )\n      .optional(),\n    // DISCORD_BOT_TOKEN: z\n    //   .string({\n    //     required_error:\n    //       \"DISCORD_BOT_TOKEN is required. Visit https://discord.com/developers/applications -> Bot -> Token. This variable used only for register commands\",\n    //   })\n    //   .min(\n    //     1,\n    //     \"DISCORD_BOT_TOKEN is required. Visit https://discord.com/developers/applications -> Bot -> Token. This variable used only for register commands\",\n    //   ),\n    ROOT_URL: z.string().url(\"ROOT_URL must be a valid URL\").optional().default(\"http://localhost:10000\"),\n  },\n  onInvalidAccess: (error) => {\n    throw new Error(`❌ Attempted to access a server-side environment variable on the client: ${error}`);\n  },\n});\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,MAAM,MAAM,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD,EAAE;IAC3B,QAAQ;QACN,YAAY,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;QAC/B,YAAY,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;QAC/B,mBAAmB,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;QACtC,eAAe,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;QAClC,UAAU,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,OAAO,CAAC;QAC7B,gBAAgB,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,GAAG,OAAO,CAAC;QAC9C,mBAAmB,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;QACtC,eAAe,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;QAClC,mBAAmB,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;QAEtC,wBAAwB,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,GAAG,OAAO,CAAC;QACtD,wBAAwB,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,GAAG,OAAO,CAAC;QACtD,mCAAmC,oIAAA,CAAA,IAAC,CAAC,MAAM;QAC3C,kBAAkB,oIAAA,CAAA,IAAC,CAAC,MAAM;QAC1B,+BAA+B,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,GAAG,OAAO,CAAC;QAC7D,+BAA+B,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,GAAG,OAAO,CAAC;QAC7D,aAAa,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,GAAG,QAAQ,GAAG,OAAO,CAAC;QACjD,mBAAmB,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;QACtC,aAAa,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;YACpB,gBACE;QACJ;QACA,mBAAmB,oIAAA,CAAA,IAAC,CACjB,MAAM,CAAC;YACN,gBACE;QACJ,GACC,GAAG,CACF,GACA,gHAED,QAAQ;QACX,gBAAgB,oIAAA,CAAA,IAAC,CACd,MAAM,CAAC;YACN,gBACE;QACJ,GACC,GAAG,CACF,GACA,sIAED,QAAQ;QACX,wBAAwB,oIAAA,CAAA,IAAC,CACtB,MAAM,CAAC;YACN,gBACE;QACJ,GACC,GAAG,CACF,GACA,8HAED,QAAQ;QACX,uBAAuB;QACvB,cAAc;QACd,sBAAsB;QACtB,2JAA2J;QAC3J,OAAO;QACP,UAAU;QACV,SAAS;QACT,yJAAyJ;QACzJ,OAAO;QACP,UAAU,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,gCAAgC,QAAQ,GAAG,OAAO,CAAC;IAC9E;IACA,iBAAiB,CAAC;QAChB,MAAM,IAAI,MAAM,CAAC,wEAAwE,EAAE,OAAO;IACpG;AACF"}},
    {"offset": {"line": 76, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 82, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/middleware.ts"],"sourcesContent":["import { clerkMiddleware, createRouteMatcher } from \"@clerk/nextjs/server\";\nimport { env } from \"~/env.mjs\";\n\nexport const config = {\n  matcher: [\n    // Skip Next.js internals and all static files, unless found in search params\n    \"/((?!_next|[^?]*\\\\.(?:html?|css|js(?!on)|jpe?g|webp|png|gif|svg|ttf|woff2?|ico|csv|docx?|xlsx?|zip|webmanifest)).*)\",\n    // Always run for API routes\n    \"/(api|trpc)(.*)\",\n  ],\n};\n\nconst isPublicRoute = createRouteMatcher([\"/\", \"/sign-in(.*)\", \"/sign-up(.*)\"]);\n\nexport default clerkMiddleware(async (auth, request) => {\n  if ([env.NODE_ENV, env.VERCEL_ENV].includes(\"production\") && !isPublicRoute(request)) {\n    await auth.protect();\n  }\n});\n"],"names":[],"mappings":";;;;AACA;AADA;AAAA;;;AAGO,MAAM,SAAS;IACpB,SAAS;QACP,6EAA6E;QAC7E;QACA,4BAA4B;QAC5B;KACD;AACH;AAEA,MAAM,gBAAgB,CAAA,GAAA,0KAAA,CAAA,qBAAkB,AAAD,EAAE;IAAC;IAAK;IAAgB;CAAe;uCAE/D,CAAA,GAAA,6KAAA,CAAA,kBAAe,AAAD,EAAE,OAAO,MAAM;IAC1C,IAAI;QAAC,oGAAA,CAAA,MAAG,CAAC,QAAQ;QAAE,oGAAA,CAAA,MAAG,CAAC,UAAU;KAAC,CAAC,QAAQ,CAAC,iBAAiB,CAAC,cAAc,UAAU;QACpF,MAAM,KAAK,OAAO;IACpB;AACF"}},
    {"offset": {"line": 112, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}